AWSTemplateFormatVersion: '2010-09-09'
Description: VPC with 3 AZs (3 public + 3 private subnets) and 1 NAT Gateway. Suitable for EKS.

Parameters:
  EnvironmentName:
    Type: String
    Default: eks
    Description: A short name to tag resources.
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR for the VPC
  Region:
    Type: String
    Default: eu-central-1
  AzLetters:
    Type: CommaDelimitedList
    Default: "a,b,c"
    Description: The three AZ letters to use, e.g. a,b,c
  PublicSubnetCidrs:
    Type: CommaDelimitedList
    Default: "10.0.0.0/24,10.0.1.0/24,10.0.2.0/24"
  PrivateSubnetCidrs:
    Type: CommaDelimitedList
    Default: "10.0.100.0/24,10.0.101.0/24,10.0.102.0/24"

Mappings:
  AzMap:
    eu-central-1:
      a: eu-central-1a
      b: eu-central-1b
      c: eu-central-1c

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  EIPNat:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPNat.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-rt

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-rt

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [0, !Ref PublicSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [0, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-1
        - Key: kubernetes.io/role/elb
          Value: '1'

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [1, !Ref PublicSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [1, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-2
        - Key: kubernetes.io/role/elb
          Value: '1'

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [2, !Ref PublicSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [2, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-3
        - Key: kubernetes.io/role/elb
          Value: '1'

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PrivateSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [0, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-1
        - Key: kubernetes.io/role/internal-elb
          Value: '1'

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PrivateSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [1, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-2
        - Key: kubernetes.io/role/internal-elb
          Value: '1'

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PrivateSubnetCidrs]
      AvailabilityZone: !FindInMap [AzMap, !Ref Region, !Select [2, !Ref AzLetters]]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-3
        - Key: kubernetes.io/role/internal-elb
          Value: '1'

  # Associations
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}:VpcId
  PublicSubnetIds:
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3]]
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnets
  PrivateSubnetIds:
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3]]
    Export:
      Name: !Sub ${EnvironmentName}:PrivateSubnets
